name: Lambda Deploy
on: push 


jobs:
  Deploy_Configure_Lambda: 
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v2
          with:
            node-version: '12'
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
        - name: Create LambdaFunction 
          run: |
            cd LambdaFunction
            zip -r ../TweetLoaderZIP.zip .
            cd ../ 
            fctname=LambdaTweetLoader
            echo $fctname
            echo testschritt >> test.txt
            cat test.txt
            aws lambda list-functions >> result.json
            echo hallo1
            sudo apt install jq
            #val=$(cat result.json | jq '.Functions' | jq '.[] | select(.FunctionName | contains ("LambdaTweetLoader"))' | jq .FunctionName)
            val=$(cat result.json | jq '.Functions' | jq '.[] | select(.FunctionName | contains ("'${fctname}'"))' | jq .FunctionName)
            echo $val
            echo "Hello1"
            rm result.json
            echo  $val 
            echo $fctname
            echo ${val:1:-1}
            echo [ ${val:1:-1} = $fctname ]
            if [ ${val:1:-1} = $fctname ]; then
                aws lambda update-function-code --function-name  $fctname --zip-file "fileb://TweetLoaderZIP.zip"
            else
                aws lambda create-function --function-name $fctname --runtime "python3.8" --role "arn:aws:iam::290544014146:role/LambdaRole" --zip-file "fileb://TweetLoaderZIP.zip" --handler lambda_function.lambda_handler
                  
            fi
        - name: Configure Environment
          run: | 
            sleep 5
            aws lambda update-function-configuration --function-name LambdaTweetLoader --environment  "Variables={BASELINE_FILE=2022-05-14-8.json.gz,BOOKMARK_FILE=bookmark,BUCKET_NAME=tweets-ingested,FODLER_PREFIX=landing/timeline,environment=dev,BEARER_TOKEN=${{ secrets.BEARER_TOKEN }}}" --query "Environment"
            sleep 5
            aws lambda update-function-configuration --function-name LambdaTweetLoader --timeout 90 --memory-size 1024 
            sleep 5
            aws lambda invoke --function-name LambdaTweetLoader response.json
            
        - name: Schedule Lambda Function every 120 Minutes
          run: |
            #Get ARN
            echo fctname
            echo $(aws lambda get-function --function-name LambdaTweetLoader | jq .Configuration.FunctionArn)
            echo $(aws lambda get-function --function-name ${fctname} | jq .Configuration.FunctionArn)
            arnName=$(aws lambda get-function --function-name ${fctname} | jq .Configuration.FunctionArn)
            echo ${arnName:1:-1}
            aws events put-rule --name TweetLoads120Min --schedule-expression 'rate(120 minutes)'
            aws lambda add-permission --function-name LambdaTweetLoader --statement-id TweetLoads120Min --action 'lambda:InvokeFunction' --principal events.amazonaws.com --source-arn ${arnName}
            aws events put-targets --rule TweetLoads120Min --targets "Id"="1","Arn"="'${arnName}'"

